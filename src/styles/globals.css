@tailwind base;
@tailwind components;
@tailwind utilities;

/* ---------- Base (ligero) ---------- */
@layer base {
  html:focus-within { scroll-behavior: smooth; }
  body { @apply antialiased bg-white text-slate-800 dark:bg-slate-900 dark:text-slate-100; }
}

/* ---------- Animaciones optimizadas ---------- */
@layer utilities {
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(-8px); }
    to   { opacity: 1; transform: translateY(0); }
  }
  @keyframes slide-up {
    from { opacity: 0; transform: translateY(12px); }
    to   { opacity: 1; transform: translateY(0); }
  }
  @keyframes pop-in {
    from { opacity: .5; transform: scale(.98); }
    to   { opacity: 1; transform: scale(1); }
  }

  /* Usa variables para controlar duración/easing/delay sin duplicar clases */
  .animate-fade-in {
    animation: fade-in var(--dur, .35s) var(--ease, cubic-bezier(.22,.61,.36,1)) var(--delay, 0ms) both;
    will-change: opacity, transform;
  }
  .animate-slide-up {
    animation: slide-up var(--dur, .35s) var(--ease, cubic-bezier(.22,.61,.36,1)) var(--delay, 0ms) both;
    will-change: opacity, transform;
  }
  .animate-pop-in {
    animation: pop-in var(--dur, .24s) var(--ease, cubic-bezier(.16,1,.3,1)) var(--delay, 0ms) both;
    will-change: opacity, transform;
  }

  /* Alias para compatibilidad con tu clase anterior */
  .animate-fadeIn { @apply animate-fade-in; }

  /* Helper opcional para “stagger”: define --i en cada hijo (0,1,2…) */
  .animate-stagger > * { animation-delay: calc(var(--delay, 0ms) + (var(--i, 0) * var(--step, 70ms))); }
}

/* Respeto a usuarios con “reducir movimiento” */
@media (prefers-reduced-motion: reduce) {
  .animate-fade-in,
  .animate-slide-up,
  .animate-pop-in {
    animation: none !important;
  }
}
